<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: jinja2 | JuliaJia's coder paradise]]></title>
  <link href="http://juliajia.github.io/blog/tags/jinja2/atom.xml" rel="self"/>
  <link href="http://juliajia.github.io/"/>
  <updated>2015-07-10T17:29:31+08:00</updated>
  <id>http://juliajia.github.io/</id>
  <author>
    <name><![CDATA[Julia Jia]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[【龍馬君从零开始学习python-flask系列之二】python-flask模板的使用方法以及jinja2的一些简单语法]]></title>
    <link href="http://juliajia.github.io/blog/20150710/python-flask-02.html"/>
    <updated>2015-07-10T15:21:59+08:00</updated>
    <id>http://juliajia.github.io/blog/20150710/python-flask-02</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section" id="markdown-toc-section">一、应用模板的简单案例</a></li>
  <li><a href="#jinja2" id="markdown-toc-jinja2">二、jinja2的控制语句</a></li>
  <li><a href="#jinja2-1" id="markdown-toc-jinja2-1">三、jinja2的循环语句</a></li>
  <li><a href="#jinja2-2" id="markdown-toc-jinja2-2">四、jinja2的模板继承属性</a></li>
</ul>

<h3 id="section">一、应用模板的简单案例</h3>
<blockquote>
  <ul>
    <li>1.如果没有模板会怎样？
我们之前已经部署好了python-flask的基础开发环境并成功的完成了万里长征第一步：万年Hello World的展示。不过我们学习python-flask可不是仅仅只是为了展示Hello World的，所以我们会美观我们的页面我们会设置很多页面属性，所以当我们想对这个程序做扩展的时候，我们会这样做：
<figure class='code'><figcaption><span>app/view.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">app</span> <span class="kn">import</span> <span class="n">app</span>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="err">‘</span><span class="o">/</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="err">‘</span><span class="o">/</span><span class="n">index</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span><span class="p">():</span>
</span><span class='line'>  <span class="n">user</span> <span class="o">=</span> <span class="p">{</span> <span class="err">‘</span><span class="n">nickname</span><span class="err">’</span><span class="p">:</span> <span class="err">‘</span><span class="n">Miguel</span><span class="err">’</span> <span class="p">}</span>   <span class="c">#fake user</span>
</span><span class='line'>  <span class="k">return</span> <span class="err">‘’’</span><span class="o">&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;/</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">blockquote</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">head</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="n">title</span><span class="o">&gt;</span><span class="n">Home</span> <span class="n">Page</span><span class="o">&lt;/</span><span class="n">title</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;/</span><span class="n">head</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">body</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Hello</span><span class="p">,</span><span class="s">&#39;&#39;&#39; + user[&#39;nickname&#39;] + &#39;&#39;&#39;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;/</span><span class="n">body</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="err">’’’</span>
</span></code></pre></td></tr></table></div></figure>
<!--more-->
保存退出以后再刷新一下浏览器，你应该可以看到Hello，Miguel出现，并且标题是Home Page！先别太激动哦，这还只是简单的一点小小的改动，现在想象一下，如果我们需要写各种复杂的页面的时候，它们跟应用程序代码挤在一起岂不是要乱成粥了？光是想想头就莫名开始痛起来，因此不把网页代码跟应用程序分开是不行的，而且你也不希望把前端网页工程师的工作也做了吧^_^！因此python-flask设计者设计出了模板，我们接下来看看我们使用模板的话，刚才的代码是怎样的！</p>

<blockquote>
  <ul>
    <li>2.如何使用模板
首先我们来写一个模板，代码如下：</li>
  </ul>
</blockquote>

<p>注意：由于博客不支持jinja2的代码所以我这边只能靠截图来展现代码了！</p>

<p>emacs app/templates/index.html</p>

<p><img src="http://7xjw6q.com1.z0.glb.clouddn.com/python-flask-02-01.png" title="Stupid ET #2" ></p>

<p>聪明的你一定发现了，除了和以外这段代码跟刚刚我们添加到view.py里的没什么太大的区别！没错，其实这两个也不陌生，它们就是变量！那么它们的值是什么呢？？？？别急，我们接下来看看view.py
<figure class='code'><figcaption><span>app/view.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">render_template</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">app</span> <span class="kn">import</span> <span class="n">app</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nd">@app.route</span><span class="p">(</span><span class="err">‘</span><span class="o">/</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="err">‘</span><span class="o">/</span><span class="n">index</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span><span class="p">():</span>
</span><span class='line'>    <span class="n">user</span> <span class="o">=</span> <span class="p">{</span> <span class="err">‘</span><span class="n">nickname</span><span class="err">’</span><span class="p">:</span> <span class="err">‘</span><span class="n">Miguel</span><span class="err">’</span> <span class="p">}</span>    <span class="c">#  fake user</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="err">“</span><span class="n">index</span><span class="o">.</span><span class="n">html</span><span class="err">”</span><span class="p">,</span>
</span><span class='line'>                                         <span class="n">title</span> <span class="o">=</span> <span class="err">“</span><span class="n">Home</span><span class="err">”</span><span class="p">,</span>
</span><span class='line'>                                         <span class="n">user</span> <span class="o">=</span> <span class="n">user</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>
这里跟刚才不同的地方就在于render_template函数的引入，这是个什么东东呢？其实说白了就是基于你模板名称以及设定的变量信息，他帮你完成替换工作，现在你明白刚刚那两个变量有什么用了吧！（需要注意的是，在内部，其实render_template调用了jinja2模板引擎的，由jinja2来做替换工作）</p>

<h3 id="jinja2">二、jinja2的控制语句</h3>
<p>讲到模板就不得不提jinja2，那么什么是jinja2呢？我搜索了一下，绝大部分介绍jinja2的都说它是仿照Django模板的python模板语言，看到这里什么是django？什么是模板语言？等等这些问题都涌了出来，不过我们这个系列是写python-flask的，所以不可以发散那么远，等以后有精力了，再去好好研究一下jinja2和django！</p>

<p>言归正传，我们来看看这个类Django的python模板语言—-Jinja2是如何去做控制的，我先提出一个问题，如果之前的代码里我少提供了一个变量会怎样？你一定会说，肯定会报错啊！没错，稍微有点开发经验的人都能猜到程序会报错，那么这段代码岂不是很死板，就不能智能的判断吗？如果用户没有提供就让程序使用默认字段代替呗！这里有个字眼—“判断”，呵呵，听到这个词，明显就是需要用到控制语句了，因此解决刚刚所说的问题解决办法就出来了，利用jinja2的控制语句进行判断何时执行默认的操作，代码如下：</p>

<p>emacs app/templates/index.html</p>

<p><img src="http://7xjw6q.com1.z0.glb.clouddn.com/python-flask-02-02.png" title="Stupid ET #2" ></p>

<p>保存代码（代码我就不解释了吧，如此清晰的语法，连我这种刚开始学习代码的二把刀都能看明白，我相信大家都能看明白是怎么回事儿）之后咱们去view.py把title参数给删除并运行run.py，看看是否会报错，最后刷新页面看看是否显示咱们指定的默认title了，如果你发现成功了的话，你可以想想如果user.nickname参数没有提供怎么办呢？动起手来改造一下，感受一下吧！！！！</p>

<h3 id="jinja2-1">三、jinja2的循环语句</h3>
<p>既然讲了控制，自然会讲到循环（为什么我要这么说，我也不知道，可能是最近看MIT的计算机导论课程看多了的关系吧！！原谅我吧！），循环顾名思义它就是一个环，只有满足指定条件它才会被打破，你可以想象你在跑圈，然后你给自己定义跑3圈停下，那么3圈就是指定条件（这个比喻形象吗？）！</p>

<p>看到这里很多人会觉得这玩意儿有什么用呢？我其实也不太懂，我一般只拿它来做遍历（我经常跟别人说我写过一个特别操蛋的程序，就是分布式的层层循环的去ping一万+的服务器来测试他们是否存活，原因嘛很简单，一次ping出来的结果往往是不准的，只有不断的去ping然后层层过滤ping不同的列表才是真正的ping不通的服务器，是不是很操蛋。。。。。），无论是遍历字典还是遍历列表还是遍历文件生成列表，所以我隐隐记得有大神说过算法牛逼的程序循环是非常少的（可能是我精分癌发作记错-_-d）！</p>

<p>我感觉我跑题了！！！！赶紧把思绪拉回来！！！！我们继续研究jinja2的循环语句，不管这个东西怎样，存在即合理，我们就要学习它！不为别的，就为把妹的时候也能多一点谈资（我感觉我好low ⊙ o ⊙ ）！要用到jinja2的循环我们必须改造一下我们的view.py脚本：
<figure class='code'><figcaption><span>app/view.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">render_template</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">app</span> <span class="kn">import</span> <span class="n">app</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="nd">@app.route</span><span class="p">(</span><span class="err">‘</span><span class="o">/</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="err">‘</span><span class="o">/</span><span class="n">index</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span><span class="p">():</span>
</span><span class='line'>    <span class="n">user</span> <span class="o">=</span> <span class="p">{</span> <span class="err">‘</span><span class="n">nickname</span><span class="err">’</span><span class="p">:</span> <span class="err">‘</span><span class="n">Miguel</span><span class="err">’</span> <span class="p">}</span>    <span class="c">#  fake user</span>
</span><span class='line'>    <span class="n">posts</span> <span class="o">=</span> <span class="p">[</span> <span class="c"># fake array of posts</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="err">‘</span><span class="n">author</span><span class="err">’</span><span class="p">:</span> <span class="p">{</span> <span class="err">‘</span><span class="n">nickname</span><span class="err">’</span><span class="p">:</span> <span class="err">‘</span><span class="n">John</span><span class="err">’</span> <span class="p">},</span>
</span><span class='line'>            <span class="err">‘</span><span class="n">body</span><span class="err">’</span><span class="p">:</span> <span class="err">‘</span><span class="n">Beautiful</span> <span class="n">day</span> <span class="ow">in</span> <span class="n">Portland</span><span class="err">!’</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="err">‘</span><span class="n">author</span><span class="err">’</span><span class="p">:</span> <span class="p">{</span> <span class="err">‘</span><span class="n">nickname</span><span class="err">’</span><span class="p">:</span> <span class="err">‘</span><span class="n">Susan</span><span class="err">’</span> <span class="p">},</span>
</span><span class='line'>            <span class="err">‘</span><span class="n">body</span><span class="err">’</span><span class="p">:</span> <span class="err">‘</span><span class="n">The</span> <span class="n">Avengers</span> <span class="n">movie</span> <span class="n">was</span> <span class="n">so</span> <span class="n">cool</span><span class="err">!’</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="err">“</span><span class="n">index</span><span class="o">.</span><span class="n">html</span><span class="err">”</span><span class="p">,</span>
</span><span class='line'>                                         <span class="n">title</span> <span class="o">=</span> <span class="err">“</span><span class="n">Home</span><span class="err">”</span><span class="p">,</span>
</span><span class='line'>                                         <span class="n">user</span> <span class="o">=</span> <span class="n">user</span><span class="p">,</span>
</span><span class='line'>                                         <span class="n">posts</span> <span class="o">=</span> <span class="n">posts</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>
心细的你一定发现了，这里多了个posts，它是个列表里面有两个字典元素，但是循环在哪呢？？？？别急别急嘛！刚刚我不是说过了么，我一般拿循环就是遍历个字典啊列表神马的，所以说我们要先给循环准备遍历的素材嘛！现在素材准备好了，我们可以开始写循环了：</p>

<p>emacs app/templates/index.html</p>

<p><img src="http://7xjw6q.com1.z0.glb.clouddn.com/python-flask-02-03.png" title="Stupid ET #2" ></p>

<p>代码完成！现在把目光聚集到之间的那句代码，通过for循环遍历了posts列表里的元素（其实就两个），然后取出这两个元素的key_value（因为这两个元素是字典），最后利用key_value组合成一句话：某某人说了某某话，所以大家可以猜到显示结果就是John和Susan分别在屏幕上说了两句屁话。。。。至此简单的循环就介绍得差不多了，想要知道高级用法，第一手段：google 第二手段：百度 第三手段：等我学到那里吧！</p>

<h3 id="jinja2-2">四、jinja2的模板继承属性</h3>
<p>不知道你们有没有发现我们有好多代码都是重复利用的，难道我们每写一个页面都要复制粘贴吗？NO！我们这么聪（shu）明(lan)机（cheng）智（xing）的人怎么能容忍这些重复操作呢！设计jinja2的大牛们也和你我一样，因此他们就搞了个模板继承的属性，让重复利用的代码单独做个模板，想要用的时候继承一下就好了，这种充（lan）满（ai）智（huan）慧（zhe）结（fu）晶（yin）的工具我们怎么能不会呢？下面我们就来看个栗子：
背景介绍：我们需要做一个导航栏，然后希望这个导航栏呢，在每个模板中都使用父模板（请允许我这样叫它）代码如下：</p>

<p>emacs app/templates/base.html</p>

<p><img src="http://7xjw6q.com1.z0.glb.clouddn.com/python-flask-02-04.png" title="Stupid ET #2" ></p>

<blockquote>
  <ul>
    <li>可以看到插入父模板只需要两个步骤：
      <ul>
        <li>step 1：告知父模板的名字</li>
        <li>step 2：用定义好的block包裹该页面代码即可（这里的页面代码指的是唯一的、不需要重复利用的）</li>
      </ul>
    </li>
  </ul>
</blockquote>

<p>至此python-flask模板的一些使用方法和jinja2的一些简单语法我们就搞完了，下篇我们将学习flask-wtf表单，敬请期待！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【龍馬君从零开始学习python-flask系列之一】部署python-flask并运行Hello World!]]></title>
    <link href="http://juliajia.github.io/blog/20150710/python-flask-01.html"/>
    <updated>2015-07-10T15:21:13+08:00</updated>
    <id>http://juliajia.github.io/blog/20150710/python-flask-01</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#python-flask" id="markdown-toc-python-flask">一、部署python-flask的环境</a></li>
  <li><a href="#python-flask-1" id="markdown-toc-python-flask-1">二、部署python-flask基本环境</a></li>
  <li><a href="#hello-world" id="markdown-toc-hello-world">三、Hello World</a></li>
</ul>

<h3 id="python-flask">一、部署python-flask的环境</h3>
<blockquote>
  <ul>
    <li>操作系统：Ubuntu14.04-64bit</li>
    <li>编辑器：Emacs24.3</li>
    <li>Python版本：2.7
<!--more--></li>
  </ul>
</blockquote>

<h3 id="python-flask-1">二、部署python-flask基本环境</h3>
<blockquote>
  <ul>
    <li>1.部署flask的基础环境
      <ul>
        <li>sudo apt-get install python-virtualenv     //安装python的虚拟环境</li>
        <li>mkdir /data/python-flask</li>
        <li>cd /data/python-flask</li>
        <li>virtualenv flask    //构建flask虚拟环境</li>
      </ul>
    </li>
    <li>2.安装flask和flask的扩展：
      <ul>
        <li>flask/bin/pip install flask</li>
        <li>flask/bin/pip install flask-login</li>
        <li>flask/bin/pip install flask-openid</li>
        <li>flask/bin/pip install flask-mail</li>
        <li>flask/bin/pip install flask-sqlalchemy</li>
        <li>flask/bin/pip install sqlalchemy-migrate</li>
        <li>flask/bin/pip install flask-whooshalchemy</li>
        <li>flask/bin/pip install flask-wtf</li>
        <li>flask/bin/pip install flask-babel</li>
        <li>flask/bin/pip install guess_language</li>
        <li>flask/bin/pip install flipflop</li>
        <li>flask/bin/pip install coverage</li>
      </ul>
    </li>
    <li>3.创建web开发文件夹：
      <ul>
        <li>mkdir app</li>
        <li>mkdir app/static</li>
        <li>mkdir app/templates</li>
        <li>mkdir tmp</li>
      </ul>
    </li>
  </ul>
</blockquote>

<h3 id="hello-world">三、Hello World</h3>
<blockquote>
  <ul>
    <li>1.创建一个简单的初始化脚本__init__.py
<figure class='code'><figcaption><span>app/<strong>init</strong>.py</li></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'>  <span class="o">&lt;/</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">blockquote</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">name</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="p">)</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">app</span> <span class="kn">import</span> <span class="n">views</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="o">*</span> <span class="mf">2.</span><span class="err">创建一个视图函数脚本</span><span class="n">views</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span> <span class="n">python</span> <span class="n">app</span><span class="o">/</span><span class="n">views</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">app</span> <span class="kn">import</span> <span class="n">app</span>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="err">‘</span><span class="o">/</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="nd">@app.route</span><span class="p">(</span><span class="err">‘</span><span class="o">/</span><span class="n">index</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span><span class="p">():</span>
</span><span class='line'>    <span class="k">return</span> <span class="err">“</span><span class="n">Hello</span> <span class="n">World</span><span class="err">!”</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="o">*</span> <span class="mf">3.</span><span class="err">创建启动</span><span class="n">WEB</span><span class="err">服务器的脚本</span><span class="n">run</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span> <span class="n">python</span> <span class="o">/</span><span class="n">data</span><span class="o">/</span><span class="n">python</span><span class="o">-</span><span class="n">flask</span><span class="o">/</span><span class="n">run</span><span class="o">.</span><span class="n">py</span>
</span><span class='line'><span class="c">#!flask/bin/python</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">app</span> <span class="kn">import</span> <span class="n">app</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">debug</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>
&gt; * 4.给这个启动脚本添加可执行权限
&gt;     * chmod a+x run.py</p>

<blockquote>
  <ul>
    <li>5.执行这个启动脚本
      <ul>
        <li>./run.py</li>
      </ul>
    </li>
  </ul>
</blockquote>

<p>成功执行启动脚本以后就可以用浏览器访问http://localhost:5000，然后就能看到Hello World啦！这样简单的python-flask就部署完毕了。下一篇我们将学习python-flask的模板用法以及一些简单的jinja2的语法，敬请期待！</p>
]]></content>
  </entry>
  
</feed>
